# name: CI

# # Controls when the workflow will run
# on:
#   # Triggers the workflow on push or pull request events but only for the "main" branch
#   push:
#     branches: ['master']
#   pull_request:
#     branches: ['master']

#   # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:

# # A workflow run is made up of one or more jobs that can run sequentially or in parallel
# jobs:
#   # This workflow contains a single job called "build"
#   build:
#     # The type of runner that the job will run on
#     runs-on: ubuntu-latest

#     # Steps represent a sequence of tasks that will be executed as part of the job
#     steps:
#       - uses: actions/checkout@v4

#       # 第二步：设置 Node.js 环境
#       - name: use Node.js
#         # 使用 actions/setup-node 安装 Node.js
#         uses: actions/setup-node@v1
#         with:
#           node-version: 18.x # 指定 Node.js 版本为 16.x

#       # 第三步：配置国内源以加快依赖项安装速度
#       - name: config
#         run: yarn config set registry https://registry.npmmirror.com/

#       # 第四步：安装项目依赖
#       - name: dependency
#         run: yarn

#       # 第五步：打包项目
#       - name: build
#         run: yarn build

#       # 第六步：通过 SSH 连接到远程服务器并删除指定目录中的所有文件
#       - name: Remove Dist
#         run: sshpass -p ${{secrets.REMOTE_PWD}} ssh -o StrictHostKeyChecking=no root@${{secrets.REMOTE_IP}} "cd /home/blog && rm -rf ./*"

#       # 第七步：通过 SCP将本地生成的打包文件上传到远程服务器的指定目录
#       - name: Upload
#         run: sshpass -p ${{secrets.REMOTE_PWD}} scp -r -o StrictHostKeyChecking=no ./dist root@${{secrets.REMOTE_IP}}:/home/blog

#       # # Runs a single command using the runners shell
#       # - name: Run a one-line script
#       #   run: echo Hello, world!

#       # # Runs a set of commands using the runners shell
#       # - name: Run a multi-line script
#       #   run: |
#       #     echo Add other actions to build,
#       #     echo test, and deploy your project.
